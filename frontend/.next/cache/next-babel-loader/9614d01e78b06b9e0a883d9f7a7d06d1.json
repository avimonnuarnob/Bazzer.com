{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\Avimonnu_arnob\\\\Advanced-React\\\\frontend\\\\components\\\\Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport { useLazyQuery } from '@apollo/client';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nconst SEARCH_PRODUCT_QUERY = gql`\n  query SEARCH_PRODUCT_QUERY($searchTerm: String!) {\n    searchTerms: allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nconst Search = () => {\n  const [findItems, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(SEARCH_PRODUCT_QUERY, {\n    fetchPolicy: 'no-cache'\n  });\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps,\n    highlightedIndex\n  } = useCombobox({\n    items,\n\n    onInputValueChange() {\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange() {\n      console.log('selected item changed');\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an Item',\n        id: 'search',\n        className: loading ? 'loading' : ''\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: items.map((item, index) => /*#__PURE__*/_createElement(DropDownItem, _objectSpread(_objectSpread({}, getItemProps({\n        item\n      })), {}, {\n        key: item.id,\n        highlighted: index === highlightedIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        },\n        __self: this\n      }), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.photo.image.publicUrlTransformed,\n        alt: item.name,\n        width: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), item.name))\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Search;","map":{"version":3,"sources":["G:/Avimonnu_arnob/Advanced-React/frontend/components/Search.js"],"names":["React","resetIdCounter","useCombobox","gql","useLazyQuery","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCT_QUERY","Search","findItems","loading","error","data","fetchPolicy","items","searchTerms","findItemsButChill","inputValue","getMenuProps","getInputProps","getComboboxProps","getItemProps","highlightedIndex","onInputValueChange","variables","searchTerm","onSelectedItemChange","console","log","type","placeholder","id","className","map","item","index","photo","image","publicUrlTransformed","name"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,MAAMC,oBAAoB,GAAGN,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;;AAqBA,MAAMO,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAZ,IAAwCV,YAAY,CACxDK,oBADwD,EAExD;AACEM,IAAAA,WAAW,EAAE;AADf,GAFwD,CAA1D;AAMA,QAAMC,KAAK,GAAG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,WAAN,KAAqB,EAAnC;AACA,QAAMC,iBAAiB,GAAGb,QAAQ,CAACM,SAAD,EAAY,GAAZ,CAAlC;AACAV,EAAAA,cAAc;AACd,QAAM;AACJkB,IAAAA,UADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,gBAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA;AANI,MAOFtB,WAAW,CAAC;AACdc,IAAAA,KADc;;AAEdS,IAAAA,kBAAkB,GAAG;AACnBP,MAAAA,iBAAiB,CAAC;AAChBQ,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAER;AADH;AADK,OAAD,CAAjB;AAKD,KARa;;AASdS,IAAAA,oBAAoB,GAAG;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;;AAXa,GAAD,CAPf;AAoBA,sBACE,QAAC,YAAD;AAAA,4BACE,+CAASR,gBAAgB,EAAzB;AAAA,6BACE,mCACMD,aAAa,CAAC;AAChBU,QAAAA,IAAI,EAAE,QADU;AAEhBC,QAAAA,WAAW,EAAE,oBAFG;AAGhBC,QAAAA,EAAE,EAAE,QAHY;AAIhBC,QAAAA,SAAS,EAAEtB,OAAO,GAAG,SAAH,GAAe;AAJjB,OAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,QAAD,kCAAcQ,YAAY,EAA1B;AAAA,gBACGJ,KAAK,CAACmB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,eAAC,YAAD,kCACMd,YAAY,CAAC;AAAEa,QAAAA;AAAF,OAAD,CADlB;AAEE,QAAA,GAAG,EAAEA,IAAI,CAACH,EAFZ;AAGE,QAAA,WAAW,EAAEI,KAAK,KAAKb,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKE;AACE,QAAA,GAAG,EAAEY,IAAI,CAACE,KAAL,CAAWC,KAAX,CAAiBC,oBADxB;AAEE,QAAA,GAAG,EAAEJ,IAAI,CAACK,IAFZ;AAGE,QAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,cALF,EAUGL,IAAI,CAACK,IAVR,CADD;AADH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA5DD;;AA8DA,eAAe/B,MAAf","sourcesContent":["import React from 'react';\r\nimport { resetIdCounter, useCombobox } from 'downshift';\r\nimport gql from 'graphql-tag';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport debounce from 'lodash.debounce';\r\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\r\n\r\nconst SEARCH_PRODUCT_QUERY = gql`\r\n  query SEARCH_PRODUCT_QUERY($searchTerm: String!) {\r\n    searchTerms: allProducts(\r\n      where: {\r\n        OR: [\r\n          { name_contains_i: $searchTerm }\r\n          { description_contains_i: $searchTerm }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      name\r\n      photo {\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Search = () => {\r\n  const [findItems, { loading, error, data }] = useLazyQuery(\r\n    SEARCH_PRODUCT_QUERY,\r\n    {\r\n      fetchPolicy: 'no-cache',\r\n    }\r\n  );\r\n  const items = data?.searchTerms || [];\r\n  const findItemsButChill = debounce(findItems, 350);\r\n  resetIdCounter();\r\n  const {\r\n    inputValue,\r\n    getMenuProps,\r\n    getInputProps,\r\n    getComboboxProps,\r\n    getItemProps,\r\n    highlightedIndex,\r\n  } = useCombobox({\r\n    items,\r\n    onInputValueChange() {\r\n      findItemsButChill({\r\n        variables: {\r\n          searchTerm: inputValue,\r\n        },\r\n      });\r\n    },\r\n    onSelectedItemChange() {\r\n      console.log('selected item changed');\r\n    },\r\n  });\r\n  return (\r\n    <SearchStyles>\r\n      <div {...getComboboxProps()}>\r\n        <input\r\n          {...getInputProps({\r\n            type: 'search',\r\n            placeholder: 'Search for an Item',\r\n            id: 'search',\r\n            className: loading ? 'loading' : '',\r\n          })}\r\n        />\r\n      </div>\r\n      <DropDown {...getMenuProps()}>\r\n        {items.map((item, index) => (\r\n          <DropDownItem\r\n            {...getItemProps({ item })}\r\n            key={item.id}\r\n            highlighted={index === highlightedIndex}\r\n          >\r\n            <img\r\n              src={item.photo.image.publicUrlTransformed}\r\n              alt={item.name}\r\n              width=\"50\"\r\n            />\r\n            {item.name}\r\n          </DropDownItem>\r\n        ))}\r\n      </DropDown>\r\n    </SearchStyles>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}