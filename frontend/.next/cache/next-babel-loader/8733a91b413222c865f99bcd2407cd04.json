{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\UpdateProduct.js\";\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { SINGLE_PRODUCT_QUERY } from './SingleProduct';\nconst UPDATE_PRODUCT_QUERY = gql`\n  mutation UPDATE_PRODUCT_QUERY(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateProduct(\n      id: $id\n      data: { id: $id, name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nconst UpdateProduct = ({\n  id\n}) => {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id\n    }\n  });\n  const [updateProduct, {\n    data: updateData,\n    error: updateError,\n    loading: updateLoading\n  }] = useMutation(UPDATE_PRODUCT_QUERY, {\n    variables: {\n      id\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\nexport default UpdateProduct;","map":{"version":3,"sources":["E:/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["React","gql","useMutation","useQuery","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_QUERY","UpdateProduct","id","data","error","loading","variables","updateProduct","updateData","updateError","updateLoading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,oBAAT,QAAqC,iBAArC;AAEA,MAAMC,oBAAoB,GAAGJ,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;;AAmBA,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAChC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BP,QAAQ,CAACC,oBAAD,EAAuB;AAC9DO,IAAAA,SAAS,EAAE;AACTJ,MAAAA;AADS;AADmD,GAAvB,CAAzC;AAKA,QAAM,CACJK,aADI,EAEJ;AAAEJ,IAAAA,IAAI,EAAEK,UAAR;AAAoBJ,IAAAA,KAAK,EAAEK,WAA3B;AAAwCJ,IAAAA,OAAO,EAAEK;AAAjD,GAFI,IAGFb,WAAW,CAACG,oBAAD,EAAuB;AACpCM,IAAAA,SAAS,EAAE;AACTJ,MAAAA;AADS;AADyB,GAAvB,CAHf;AAQA,sBAAO;AAAA,cAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAfD;;AAiBA,eAAeD,aAAf","sourcesContent":["import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { SINGLE_PRODUCT_QUERY } from './SingleProduct';\r\n\r\nconst UPDATE_PRODUCT_QUERY = gql`\r\n  mutation UPDATE_PRODUCT_QUERY(\r\n    $id: ID!\r\n    $name: String\r\n    $description: String\r\n    $price: Int\r\n  ) {\r\n    updateProduct(\r\n      id: $id\r\n      data: { id: $id, name: $name, description: $description, price: $price }\r\n    ) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nconst UpdateProduct = ({ id }) => {\r\n  const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\r\n    variables: {\r\n      id,\r\n    },\r\n  });\r\n  const [\r\n    updateProduct,\r\n    { data: updateData, error: updateError, loading: updateLoading },\r\n  ] = useMutation(UPDATE_PRODUCT_QUERY, {\r\n    variables: {\r\n      id,\r\n    },\r\n  });\r\n  return <p>{id}</p>;\r\n};\r\n\r\nexport default UpdateProduct;\r\n"]},"metadata":{},"sourceType":"module"}