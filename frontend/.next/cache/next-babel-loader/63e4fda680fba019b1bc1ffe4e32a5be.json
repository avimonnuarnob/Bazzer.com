{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\Avimonnu_arnob\\\\Advanced-React\\\\frontend\\\\components\\\\Checkout.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport nProgress from 'nprogress';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport SickButton from './styles/SickButton';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      item {\n        id\n        name\n      }\n    }\n  }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nconst CheckoutForm = () => {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [checkout, {\n    error: graphqlError\n  }] = useMutation(CREATE_ORDER_MUTATION);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    nProgress.start();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n\n    if (error) {\n      setError(error);\n    }\n\n    setLoading(false);\n    nProgress.done();\n  };\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '12'\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Checkout Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\nconst Checkout = () => /*#__PURE__*/_jsxDEV(Elements, {\n  stripe: stripeLib,\n  children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 76,\n  columnNumber: 3\n}, this);\n\nexport default Checkout;","map":{"version":3,"sources":["G:/Avimonnu_arnob/Advanced-React/frontend/components/Checkout.js"],"names":["React","useState","styled","nProgress","loadStripe","CardElement","Elements","useElements","useStripe","gql","useMutation","SickButton","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","checkout","graphqlError","handleSubmit","e","preventDefault","start","paymentMethod","createPaymentMethod","type","card","getElement","done","fontSize","message","Checkout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SACEC,WADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,yBALP;AAMA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,MAAMC,kBAAkB,GAAGV,MAAM,CAACW,IAAV;AAAA;AAAA;AAAA,8IAAxB;AASA,MAAMC,qBAAqB,GAAGL,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMM,SAAS,GAAGX,UAAU,CAACY,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBpB,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACqB,OAAD;AAAA,OAAUC;AAAV,MAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMuB,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAMiB,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAM,CAACmB,QAAD,EAAW;AAAEN,IAAAA,KAAK,EAAEO;AAAT,GAAX,IAAsCjB,WAAW,CACrDI,qBADqD,CAAvD;;AAIA,QAAMc,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACApB,IAAAA,SAAS,CAAC4B,KAAV;AACA,UAAM;AAAEX,MAAAA,KAAF;AAASY,MAAAA;AAAT,QAA2B,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAEV,QAAQ,CAACW,UAAT,CAAoB/B,WAApB;AAF0D,KAA3B,CAAvC;;AAKA,QAAIe,KAAJ,EAAW;AACTC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAEDG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACApB,IAAAA,SAAS,CAACkC,IAAV;AACD,GAfD;;AAiBA,sBACE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAET,YAA9B;AAAA,eACGR,KAAK,iBAAI;AAAG,MAAA,KAAK,EAAE;AAAEkB,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,gBAA+BlB,KAAK,CAACmB;AAArC;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjCD;;AAmCA,MAAMC,QAAQ,GAAG,mBACf,QAAC,QAAD;AAAU,EAAA,MAAM,EAAEzB,SAAlB;AAAA,yBACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;AAMA,eAAeyB,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport nProgress from 'nprogress';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from '@stripe/react-stripe-js';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport SickButton from './styles/SickButton';\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n  border: 1px solid rgba(0, 0, 0, 0.06);\r\n  border-radius: 5px;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n  mutation CREATE_ORDER_MUTATION($token: String!) {\r\n    checkout(token: $token) {\r\n      id\r\n      charge\r\n      total\r\n      item {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nconst CheckoutForm = () => {\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [checkout, { error: graphqlError }] = useMutation(\r\n    CREATE_ORDER_MUTATION\r\n  );\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    nProgress.start();\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    if (error) {\r\n      setError(error);\r\n    }\r\n\r\n    setLoading(false);\r\n    nProgress.done();\r\n  };\r\n\r\n  return (\r\n    <CheckoutFormStyles onSubmit={handleSubmit}>\r\n      {error && <p style={{ fontSize: '12' }}>{error.message}</p>}\r\n      <CardElement />\r\n      <SickButton>Checkout Now</SickButton>\r\n    </CheckoutFormStyles>\r\n  );\r\n};\r\n\r\nconst Checkout = () => (\r\n  <Elements stripe={stripeLib}>\r\n    <CheckoutForm />\r\n  </Elements>\r\n);\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}