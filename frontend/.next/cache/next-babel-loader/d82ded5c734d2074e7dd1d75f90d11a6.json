{"ast":null,"code":"import _taggedTemplateLiteral from \"E:/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\Products.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_PRODUCTS_QUERY {\\n    allProducts {\\n      id\\n      name\\n      price\\n      description\\n      photo {\\n        id\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport styled from 'styled-components';\nimport Product from './Product';\nvar ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductList = styled.div.withConfig({\n  displayName: \"Products__ProductList\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;\"]);\n_c = ProductList;\n\nvar Products = function Products() {\n  _s();\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, _this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(ProductList, {\n    children: data.allProducts.map(function (product) {\n      return /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Products;\nexport default Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductList\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["E:/Advanced-React/sick-fits/frontend/components/Products.js"],"names":["React","gql","useQuery","styled","Product","ALL_PRODUCTS_QUERY","ProductList","div","Products","data","error","loading","message","allProducts","map","product"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAMC,kBAAkB,GAAGJ,GAAH,mBAAxB;AAiBA,IAAMK,WAAW,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,iEAAjB;KAAMD,W;;AAMN,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBACYN,QAAQ,CAACG,kBAAD,CADpB;AAAA,MACbI,IADa,aACbA,IADa;AAAA,MACPC,KADO,aACPA,KADO;AAAA,MACAC,OADA,aACAA,OADA;;AAErB,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAEX,sBACE,QAAC,WAAD;AAAA,cACGH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,0BACpB,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,eADoB;AAAA,KAArB;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAZD;;GAAMP,Q;UAC6BN,Q;;;MAD7BM,Q;AAcN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/client';\r\nimport styled from 'styled-components';\r\nimport Product from './Product';\r\n\r\nconst ALL_PRODUCTS_QUERY = gql`\r\n  query ALL_PRODUCTS_QUERY {\r\n    allProducts {\r\n      id\r\n      name\r\n      price\r\n      description\r\n      photo {\r\n        id\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProductList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 60px;\r\n`;\r\n\r\nconst Products = () => {\r\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY);\r\n  if (loading) return <p>Loading....</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  return (\r\n    <ProductList>\r\n      {data.allProducts.map((product) => (\r\n        <Product product={product} />\r\n      ))}\r\n    </ProductList>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"]},"metadata":{},"sourceType":"module"}