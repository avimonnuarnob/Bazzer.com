{"ast":null,"code":"import _regeneratorRuntime from \"E:/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"E:/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"E:/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"E:/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\UpdateProduct.js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PRODUCT_QUERY(\\n    $id: ID!\\n    $name: String\\n    $description: String\\n    $price: Int\\n  ) {\\n    updateProduct(\\n      id: $id\\n      data: { name: $name, description: $description, price: $price }\\n    ) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { SINGLE_PRODUCT_QUERY } from './SingleProduct';\nimport Form from './styles/Form';\nimport DisplayError from './ErrorMessage';\nimport useForm from '../lib/useForm';\nvar UPDATE_PRODUCT_QUERY = gql(_templateObject());\n\nvar UpdateProduct = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref2 = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n    var id, _yield$useQuery, data, error, loading, _useMutation, _useMutation2, updateProduct, _useMutation2$, updateData, updateError, updateLoading, _useForm, inputs, handleChange, clearForm, resetForm;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _s();\n\n            id = _ref.id;\n            _context2.next = 4;\n            return useQuery(SINGLE_PRODUCT_QUERY, {\n              variables: {\n                id: id\n              }\n            });\n\n          case 4:\n            _yield$useQuery = _context2.sent;\n            data = _yield$useQuery.data;\n            error = _yield$useQuery.error;\n            loading = _yield$useQuery.loading;\n            _useMutation = useMutation(UPDATE_PRODUCT_QUERY), _useMutation2 = _slicedToArray(_useMutation, 2), updateProduct = _useMutation2[0], _useMutation2$ = _useMutation2[1], updateData = _useMutation2$.data, updateError = _useMutation2$.error, updateLoading = _useMutation2$.loading;\n            _useForm = useForm(data.Product), inputs = _useForm.inputs, handleChange = _useForm.handleChange, clearForm = _useForm.clearForm, resetForm = _useForm.resetForm;\n\n            if (!loading) {\n              _context2.next = 12;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 23\n            }, _this));\n\n          case 12:\n            return _context2.abrupt(\"return\", /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          e.preventDefault();\n                          _context.next = 3;\n                          return updateProduct({\n                            variables: {\n                              id: id,\n                              name: inputs.name,\n                              description: inputs.description,\n                              price: inputs.price\n                            }\n                          });\n\n                        case 3:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }(),\n              children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n                error: error || updateError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 7\n              }, _this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                disabled: updateLoading,\n                \"aria-busy\": updateLoading,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"name\",\n                    name: \"name\",\n                    placeholder: \"Name\",\n                    value: inputs.name,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 11\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 9\n                }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"price\",\n                  children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    id: \"price\",\n                    name: \"price\",\n                    placeholder: \"Price\",\n                    value: inputs.price,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 11\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 9\n                }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"description\",\n                  children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    id: \"description\",\n                    name: \"description\",\n                    placeholder: \"Description\",\n                    value: inputs.description,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 11\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 9\n                }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Update Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 9\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 7\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 5\n            }, _this));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }), \"IRgpJ/5/d0+iwgfxkT/syBiwxPE=\", false, function () {\n    return [useQuery, useMutation, useForm];\n  }));\n\n  return function UpdateProduct(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["E:/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["React","gql","useMutation","useQuery","SINGLE_PRODUCT_QUERY","Form","DisplayError","useForm","UPDATE_PRODUCT_QUERY","UpdateProduct","id","variables","data","error","loading","updateProduct","updateData","updateError","updateLoading","Product","inputs","handleChange","clearForm","resetForm","e","preventDefault","name","description","price"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { SINGLE_PRODUCT_QUERY } from './SingleProduct';\r\nimport Form from './styles/Form';\r\nimport DisplayError from './ErrorMessage';\r\nimport useForm from '../lib/useForm';\r\n\r\nconst UPDATE_PRODUCT_QUERY = gql`\r\n  mutation UPDATE_PRODUCT_QUERY(\r\n    $id: ID!\r\n    $name: String\r\n    $description: String\r\n    $price: Int\r\n  ) {\r\n    updateProduct(\r\n      id: $id\r\n      data: { name: $name, description: $description, price: $price }\r\n    ) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nconst UpdateProduct = async ({ id }) => {\r\n  const { data, error, loading } = await useQuery(SINGLE_PRODUCT_QUERY, {\r\n    variables: {\r\n      id,\r\n    },\r\n  });\r\n\r\n  const [\r\n    updateProduct,\r\n    { data: updateData, error: updateError, loading: updateLoading },\r\n  ] = useMutation(UPDATE_PRODUCT_QUERY);\r\n  const { inputs, handleChange, clearForm, resetForm } = useForm(data.Product);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={async (e) => {\r\n        e.preventDefault();\r\n        await updateProduct({\r\n          variables: {\r\n            id,\r\n            name: inputs.name,\r\n            description: inputs.description,\r\n            price: inputs.price,\r\n          },\r\n        });\r\n        //     Router.push({\r\n        //       pathname: `/product/${res.data.createProduct.id}`,\r\n        //     });\r\n      }}\r\n    >\r\n      <DisplayError error={error || updateError} />\r\n      <fieldset disabled={updateLoading} aria-busy={updateLoading}>\r\n        <label htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={inputs.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"price\">\r\n          Price\r\n          <input\r\n            type=\"number\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n            placeholder=\"Price\"\r\n            value={inputs.price}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"description\">\r\n          Description\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            placeholder=\"Description\"\r\n            value={inputs.description}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Update Product</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n"]},"metadata":{},"sourceType":"module"}